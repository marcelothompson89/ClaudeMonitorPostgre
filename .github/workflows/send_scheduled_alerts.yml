name: Enviar Alertas Programadas

on:
  schedule:
    # Ejecutar todos los días a las 9:00 AM UTC (6:00 AM Buenos Aires)
    - cron: '0 9 * * *'
  workflow_dispatch:  # Permite ejecutar manualmente

jobs:
  send-alerts:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install psycopg2-binary

      - name: Configurar archivo .env
        env:
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
          EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          SCRAPER_API_TOKEN: ${{ secrets.SCRAPER_API_TOKEN }}
        run: |
          echo "EMAIL_HOST_USER=$EMAIL_HOST_USER" > .env
          echo "EMAIL_HOST_PASSWORD=$EMAIL_HOST_PASSWORD" >> .env
          echo "SCRAPER_API_TOKEN=$SCRAPER_API_TOKEN" >> .env
          echo "DB_NAME=postgres" >> .env
          echo "DB_USER=postgres.xgbeamjnwzlahjbehcuy" >> .env
          echo "DB_PASSWORD=$DB_PASSWORD" >> .env
          echo "DB_HOST=aws-0-sa-east-1.pooler.supabase.com" >> .env
          echo "DB_PORT=5432" >> .env
          echo "SECRET_KEY=$SECRET_KEY" >> .env
          echo "DEBUG=False" >> .env

      - name: Enviar alertas programadas
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DEBUG: 'False'
          DB_NAME: 'postgres'
          DB_USER: 'postgres.xgbeamjnwzlahjbehcuy'
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: 'aws-0-sa-east-1.pooler.supabase.com'
          DB_PORT: '5432'
          EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
          EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
          SCRAPER_API_TOKEN: ${{ secrets.SCRAPER_API_TOKEN }}
        run: |
          python manage.py send_scheduled_alerts